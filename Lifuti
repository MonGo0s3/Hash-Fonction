package com.qr.lobi;

import android.graphics.Bitmap;
import android.os.Bundle;
import android.util.Log;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;

public class BarcodeGeneratorActivity extends AppCompatActivity {

    private static final String TAG = "BarcodeGeneratorActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_barcode_generator);

        String studentName = "Warriors Does";
        double academicFees = 600.000;

        try {
            Bitmap barcodeBitmap = generateBarcode(studentName, academicFees);
            ImageView imageView = findViewById(R.id.barcode_image);
            imageView.setImageBitmap(barcodeBitmap);
        } catch (WriterException e) {
            Log.e(TAG, "Error generating barcode: " + e.getMessage());
            Toast.makeText(this, "Failed to generate barcode", Toast.LENGTH_SHORT).show();
        }
    }

    private Bitmap generateBarcode(String studentName, double academicFees) throws WriterException {
        String barcodeData = "Name: " + studentName + ", Fees: $" + academicFees;

        BarcodeFormat barcodeFormat = BarcodeFormat.QR_CODE;

        int widthPixels = 400;
        int heightPixels = 400;

        BitMatrix bitMatrix = new QRCodeWriter().encode(barcodeData, barcodeFormat, widthPixels, heightPixels);
        int barcodeWidth = bitMatrix.getWidth();
        int barcodeHeight = bitMatrix.getHeight();

        Bitmap barcodeBitmap = Bitmap.createBitmap(barcodeWidth, barcodeHeight, Bitmap.Config.ARGB_8888);

        for (int x = 0; x < barcodeWidth; x++) {
            for (int y = 0; y < barcodeHeight; y++) {
                barcodeBitmap.setPixel(x, y, bitMatrix.get(x, y) ? getResources().getColor(R.color.black) : getResources().getColor(R.color.white));
            }
        }

        return barcodeBitmap;
    }
}
